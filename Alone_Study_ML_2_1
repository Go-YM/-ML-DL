## 하나의 파이썬 리스트로 이루어진 fish_length와 fish_weight
fish_length = [25.4, 26.3, 26.5, 29.0, 29.0, 29.7, 29.7, 30.0, 30.0, 30.7, 31.0, 31.0, 
                31.5, 32.0, 32.0, 32.0, 33.0, 33.0, 33.5, 33.5, 34.0, 34.0, 34.5, 35.0, 
                35.0, 35.0, 35.0, 36.0, 36.0, 37.0, 38.5, 38.5, 39.5, 41.0, 41.0, 9.8, 
                10.5, 10.6, 11.0, 11.2, 11.3, 11.8, 11.8, 12.0, 12.2, 12.4, 13.0, 14.3, 15.0]
fish_weight = [242.0, 290.0, 340.0, 363.0, 430.0, 450.0, 500.0, 390.0, 450.0, 500.0, 475.0, 500.0, 
                500.0, 340.0, 600.0, 600.0, 700.0, 700.0, 610.0, 650.0, 575.0, 685.0, 620.0, 680.0, 
                700.0, 725.0, 720.0, 714.0, 850.0, 1000.0, 920.0, 955.0, 925.0, 975.0, 950.0, 6.7, 
                7.5, 7.0, 9.7, 9.8, 8.7, 10.0, 9.9, 9.8, 12.2, 13.4, 12.2, 19.7, 19.9]

## 사이킷런을 활용하기 위해 2차원 리스트로 생성
fish_data = [[l,w] for l,w in zip(fish_length,fish_weight)]
fish_target = [1]*35 + [0]*14

## k-최근접이웃 import
from sklearn.neighbors import KNeighborsClassifier

kn = KNeighborsClassifier()

## 훈련세트로 입력 값 중 0부터 34번째 인덱스 까지 사용
train_input = fish_data[:35]

## 훈련세트로 타겟 값 중 0부터 34번째 인덕스 까지 사용
train_target = fish_target[:35]

## 테스트세트로 입력 값 중 35부터 마지막 인덱스 까지 사용
test_input = fish_data[35:]

## 테스트세트로 타겟 값 중 35부터 마지막 인덕스 까지 사용
test_target = fish_target[35:]

kn.fit(train_input, train_target)
unmixed_score = kn.score(test_input,test_target)
print(unmixed_score)

import numpy as np

input_arr = np.array(fish_data)
target_arr = np.array(fish_target)

np.random.seed(42) ## 예제와 동일한 결과를 얻기위해 seed를 42로 설정
index = np.arange(49) ## 0부터 48까지 1씩 증가하는 인덱스 배열 생성
np.random.shuffle(index) ## 인덱스 배열 섞기

## 섞인 훈련 세트
train_input = input_arr[index[:35]]
train_target = target_arr[index[:35]]

## 섞인 테스트 세트
test_input = input_arr[index[35:]]
test_target = target_arr[index[35:]]

import matplotlib.pyplot as plt
plt.scatter(train_input[:,0], train_input[:,1])
plt.scatter(test_input[:,0], test_input[:,1])
plt.xlabel('length')
plt.ylabel('weight')
plt.show()

kn = kn.fit(train_input,train_target)

mixed_score = kn.score(test_input,test_target)
print(mixed_score)
